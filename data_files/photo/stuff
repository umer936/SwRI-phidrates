1c1
< C     Last change:  WH   20 Aug 99   11:41 am
---
> C     Last change:  WH   27 Aug 99    4:56 pm
12,13c12,13
<       OPEN(7, FILE='CONOUT1')
<       OPEN(8, FILE='CONOUT2')
---
> *      OPEN(7, FILE='CONOUT1')
> *      OPEN(8, FILE='CONOUT2')
28c28
<    20 WRITE(7, 30) NSUM
---
> *   20 WRITE(7, 30) NSUM
30c30,31
<       END
---
> *      END
>    20 END
37,38c38,42
<       CHARACTER*52 FMT1
<       CHARACTER*47 FMT2
---
>       CHARACTER*39 FMT1
>       CHARACTER*39 FMT2
> C     Next 2 lines for diagnostic print only.  Not set up for plotting.
> *      CHARACTER*52 FMT1
> *      CHARACTER*47 FMT2
42,43c46,50
<       DATA FMT1 /'(('' Lambda  Sigma'', 2X, 0(2X, ''BR:'', 2X, A8)))'/
<       DATA FMT2 /'((0PF7.1, 1X, 1PE8.2, 0(0PF6.3, 1X, 1PE8.2)))'/
---
>       DATA FMT1 /'(('' Lambda  Sigma'', 2X, 00(1X, A8)))'/
>       DATA FMT2 /'((0PF7.1, 1X, 1PE8.2, 00(1X, 1PE8.2)))'/
> C     Next 2 lines for diagnostic print only.  Not set up for plotting.
> *      DATA FMT1 /'(('' Lambda  Sigma'', 2X, 0(2X, ''BR:'', 2X, A8)))'/
> *      DATA FMT2 /'((0PF7.1, 1X, 1PE8.2, 0(0PF6.3, 1X, 1PE8.2)))'/
160c167,170
<   155 FMT1(25:25) = CHAR(N1 + 48)
---
>   155 IF(N1 .LT. 10) FMT1(26:26) = CHAR(N1 + 48)
>       IF(N1 .LT. 10) FMT1(25:25) = CHAR(48)
>       IF(N1 .GE. 10) FMT1(26:26) = CHAR(N1 + 38)
>       IF(N1 .GE. 10) FMT1(25:25) = CHAR(N1/10 + 48)
162,163c172,175
<       FMT2(23:23) = CHAR(N1 + 48)
<       IF(N1 .GE. 10) FMT2(22:22) = CHAR(N1/10 + 48)
---
>       IF(N1 .LT. 10) FMT2(24:24) = CHAR(N1 + 48)
>       IF(N1 .LT. 10) FMT2(23:23) = CHAR(48)
>       IF(N1 .GE. 10) FMT2(24:24) = CHAR(N1 + 38)
>       IF(N1 .GE. 10) FMT2(23:23) = CHAR(N1/10 + 48)
168,169c180,183
<       WRITE(2, FMT2) (ANGSTS(I), SIGMA(I), (TABBRP(I,J), TABSIG(I,J),
<      1J=N2,N3),I=1,NS)
---
>       WRITE(2, FMT2) (ANGSTS(I), SIGMA(I), (TABSIG(I,J),J=n2,n3),I=1,NS)
> C     Next 2 lines for diagnostic print only.  Not set up for plotting.
> *      WRITE(2, FMT2) (ANGSTS(I), SIGMA(I), (TABBRP(I,J), TABSIG(I,J),
> *     1J=n2,n3),I=1,NS)
184c198
<   190 FORMAT(10A8)
---
>   190 FORMAT (10A8)
190c204
<   290 FORMAT('0 Branching ratio for',(2(1X, A8)), 5X, I1,' Branches')
---
>   290 FORMAT('0 Branching ratio for',(2(1X, A8)), 4X, I2,' Branches')
194,236d207
< *       BLOCK DATA FLUX
< c
< c      Ratio of solar flux for active Sun to quiet Sun
< c      Lean, J. (1987)
< c         J. Geophys. Res. 92, 839-868.
< *     A  6.37, 6.37, 6.37, 6.37, 6.37, 6.37, 6.37, 6.37, 2.50, 2.50,
< *     B  2.30, 2.10, 2.13, 2.34, 2.56, 3.60, 4.51, 5.38, 5.38, 2.10,
< *     C  2.10, 2.53, 2.96, 2.96, 2.13, 2.37, 2.84, 2.84, 2.40, 2.40,
< *     D  2.30, 2.20, 2.20, 2.02, 2.02, 1.88, 1.79, 1.79, 1.96, 2.04,
< *     E  2.18, 1.94, 2.46, 2.43, 2.40, 2.40, 2.40, 2.40, 1.96, 1.96,
< *     F  1.96, 1.96, 2.20, 2.37, 2.37, 2.37, 2.37, 1.99, 1.72, 1.72,
< *     G  1.72, 1.72, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.92, 1.92,
< *     H  1.92, 1.92, 1.92, 1.92, 2.37, 2.55, 2.55, 2.55, 2.55, 2.55,
< *     I  2.55, 2.13, 2.13, 2.13, 2.13, 2.13, 2.13, 1.89, 1.85, 1.85,
< *     J  1.85, 1.85, 1.88, 2.08, 2.08, 2.08, 2.08, 2.01, 1.91, 1.91,
< *     K  1.65, 1.64, 1.61, 1.59, 1.55, 1.50, 1.49, 1.47, 1.41, 1.37,
< *     L  1.26, 1.24, 1.22, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.13,
< *     M  1.13, 1.13, 1.13, 1.13, 1.13, 1.13, 1.13, 1.09, 1.09, 1.09,
< *     N  1.09, 1.08, 1.04, 1.04, 1.05, 1.05, 1.04, 1.04, 1.04, 1.04,
< *     O  1.04, 1.04, 1.04, 1.04, 1.03, 1.04, 1.04, 1.04, 1.03, 1.02,
< *     P  1.03, 1.02, 1.01, 1.01, 1.02, 1.03, 1.02, 1.02, 1.02, 1.00,
< *     Q  1.04, 1.02/
< c      NOT IN USE: Hinteregger, h. e., adv. space res. 1, 39-52 (1981).
< c     data (flxrat(i),i=1,162)/
< c    a  5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00,
< c    b  5.00, 5.00, 4.67, 2.33, 4.11, 6.88, 5.71, 9.89,11.84, 2.30,
< c    c  8.02, 6.94, 3.95, 2.23, 4.79, 1.97, 3.15, 6.13, 3.87, 2.70,
< c    d  2.12, 2.06, 2.46, 3.55, 2.76, 2.07, 1.88, 2.33, 2.85, 2.34,
< c    e  2.59, 2.36, 2.55, 2.52, 2.49, 2.47, 2.45, 2.45, 2.48, 2.48,
< c    f  2.24, 2.00, 1.95, 1.92, 2.05, 2.55, 2.55, 2.16, 1.88, 1.88,
< c    g  1.88, 1.88, 2.18, 2.18, 2.28, 2.38, 2.38, 3.14, 3.14, 3.14,
< c    h  3.01, 2.38, 2.38, 2.38, 2.17, 2.08, 2.08, 2.31, 2.89, 2.89,
< c    i  2.89, 2.55, 2.55, 2.55, 2.55, 2.55, 2.55, 2.12, 2.06, 2.06,
< c    j  2.09, 2.09, 2.11, 2.23, 2.23, 2.21, 2.19, 2.17, 2.13, 2.05,
< c    k  1.97, 1.90, 1.83, 1.80, 1.80, 1.70, 1.60, 1.54, 1.51, 1.43,
< c    l  1.35, 1.28, 1.26, 1.22, 1.21, 1.22, 1.27, 1.23, 1.20, 1.10,
< c    m  1.07, 1.04, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00,
< C    N  1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00,
< C    O  1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00,
< C    P  1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00
< C    Q  1.00, 1.00/
< *      END
< 
250c221
<       DATA FMT1 /'((''0Wavelength    Flux    '', 0(2X, A8, 2X)))'/
---
>       DATA FMT1 /'((''0Wavelength    Total    '', 0(2X, A8, 2X)))'/
481c452,453
<       WRITE(15, FMT2) (ANGSTF(I), FLUX(I), (XSCTN(I,J),J=M3,M4),i=minpr
---
> *      WRITE(15, FMT2) (ANGSTF(I), FLUX(I), (XSCTN(I,J),J=M3,M4),i=minpr
>       WRITE(15, FMT2) (ANGSTF(I), SIGMA(I), (XSCTN(I,J),J=M3,M4),i=minpr
794,795c766,767
<       if (iflag.eq.0) write (7,220) numb,icat,max
<       if (iflag.eq.1) write (8,180) name,ind1,ind2,numb,icat,max
---
> *      if (iflag.eq.0) write (7,220) numb,icat,max
> *      if (iflag.eq.1) write (8,180) name,ind1,ind2,numb,icat,max
808c780
<       if (iflag.eq.0) write (7,fmt2) data(n1),(data(i),i=n1p1,n2)
---
> *      if (iflag.eq.0) write (7,fmt2) data(n1),(data(i),i=n1p1,n2)
811c783
<       if (iflag.eq.1) write (8,fmt1) data(n1),(data(i),i=n1p1,n2)
---
> *      if (iflag.eq.1) write (8,fmt1) data(n1),(data(i),i=n1p1,n2)
815,816c787,788
<       if (iflag.eq.0) write (7,230) data(n1)
<       if (iflag.eq.1) write (8,210) data(n1)
---
> *      if (iflag.eq.0) write (7,230) data(n1)
> *      if (iflag.eq.1) write (8,210) data(n1)
820,821c792,793
<       if (iflag.eq.0) write (7,240) (data(i),i=n1,n2)
<       if (iflag.eq.1) write (8,170) (data(i),i=n1,n2)
---
> *      if (iflag.eq.0) write (7,240) (data(i),i=n1,n2)
> *      if (iflag.eq.1) write (8,170) (data(i),i=n1,n2)
828c800
<       if (iflag.eq.1) write (8,190) name,ind1,ind2
---
> *      if (iflag.eq.1) write (8,190) name,ind1,ind2
835,836c807,808
<   130 FORMAT('0', 48X, 'Total Rate = ', 1PE10.3)
<   140 FORMAT(45X, 'Average Energy = ', F6.3)
---
>   130 FORMAT ('0', 48X, 'Total Rate = ', 1PE10.3)
>   140 FORMAT (45X, 'Average Energy = ', F6.3)
839c811
<   160 FORMAT(10X, 5E10.3)
---
>   160 FORMAT (10X, 5E10.3)
